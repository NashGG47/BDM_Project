from influxdb_client import InfluxDBClient, Point, WritePrecision
from influxdb_client.client.write_api import SYNCHRONOUS
from datetime import datetime
import pandas as pd
from sklearn.preprocessing import LabelEncoder
import joblib
import os

url = "http://localhost:8086"
token = "token1"
org = "upa" 
raw_bucket = "gencat_incidents"
processed_bucket = "processed_incidents"

def extract_and_prepare():
    query = f'''
    from(bucket: "{raw_bucket}")
      |> range(start: -30d)
      |> filter(fn: (r) => r._measurement == "traffic_incidents")
      |> filter(fn: (r) => r._field == "pk_start" or r._field == "pk_end")
      |> pivot(rowKey:["_time"], columnKey: ["_field"], valueColumn: "_value")
      |> keep(columns: ["_time", "pk_start", "pk_end", "road", "direction", "cause"])
    '''

    client = InfluxDBClient(url=url, token=token, org=org)
    query_result = client.query_api().query_data_frame(org=org, query=query)

    if isinstance(query_result, list):
        df = pd.concat(query_result, ignore_index=True)
    else:
        df = query_result
    df = df.dropna()

    df["is_maintenance"] = (df["cause"] == "Treballs de manteniment").astype(int)

    label_encoders = {}
    for col in ["road", "direction"]:
        le = LabelEncoder()
        df[col] = le.fit_transform(df[col])
        label_encoders[col] = le

    os.makedirs("data", exist_ok=True)
    df.to_csv("data/prepared_data.csv", index=False)
    joblib.dump(label_encoders, "data/label_encoders.pkl")
    print("Data prepared and saved locally.")
    write_api = client.write_api(write_options=SYNCHRONOUS)
    for _, row in df.iterrows():
        point = (
            Point("processed_incident")
            .tag("road", str(row["road"]))
            .tag("direction", str(row["direction"]))
            .field("pk_start", float(row["pk_start"]))
            .field("pk_end", float(row["pk_end"]))
            .field("is_maintenance", int(row["is_maintenance"]))
            .time(pd.to_datetime(row["_time"]), WritePrecision.NS)
        )
        write_api.write(bucket=processed_bucket, org=org, record=point)

    print(f"Cleaned data written to InfluxDB bucket: '{processed_bucket}'")
    client.close()